syntax = "proto3";

package task;

import "google/protobuf/timestamp.proto";
import "validate/validate.proto";

option go_package = "tasker/internal/task/pb;taskpb";

service TaskService {
    rpc CreateTask (CreateTaskRequest) returns (TaskResponse);
    rpc GetTask (GetTaskRequest) returns (TaskResponse);
    rpc ListTasks (ListTasksRequest) returns (ListTasksResponse);
    rpc UpdateTask (UpdateTaskRequest) returns (TaskResponse);
    rpc DeleteTask (DeleteTaskRequest) returns (DeleteTaskResponse);
}

message Task {
    string id = 1 [(validate.rules).string.uuid = true];
    string title = 2;
    string description = 3;
    string status = 4 [(validate.rules).string = {
        in: ["TODO", "INPROGRESS", "DONE", "CANCELED", "HOLD"]
    }];
    google.protobuf.Timestamp deadline = 5;
    google.protobuf.Timestamp createdAt = 6;
    google.protobuf.Timestamp updatedAt = 7;
}

message CreateTaskRequest {
    string title = 1;
    string description = 2;
    google.protobuf.Timestamp deadline = 3;
}

message GetTaskRequest {
    string id = 1 [(validate.rules).string.uuid = true];
}

message ListTasksRequest {}

message UpdateTaskRequest {
    string id = 1 [(validate.rules).string.uuid = true];
    string status = 2 [(validate.rules).string = {
        in: ["TODO", "INPROGRESS", "DONE", "CANCELED", "HOLD"]
    }];
}

message DeleteTaskRequest {
    string id = 1 [(validate.rules).string.uuid = true];
}

message TaskResponse {
    Task task = 1;
}

message ListTasksResponse {
    repeated Task task = 1;
}

message DeleteTaskResponse {
    bool success = 1;
}
