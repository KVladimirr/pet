// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/task": {
            "get": {
                "description": "Запрос задачи по id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "task"
                ],
                "summary": "Получение задачи",
                "parameters": [
                    {
                        "type": "string",
                        "example": "a81bc81b-dead-4e5d-abff-90865d1e13b1",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gateway.TaskResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gateway.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gateway.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Обновляет статус задачи по ее id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "task"
                ],
                "summary": "Обновление задачи",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Id задачи",
                        "name": "id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "Статус задачи",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/gateway.UpdateTaskRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gateway.TaskResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gateway.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gateway.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Создает задачу",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "task"
                ],
                "summary": "Создание задачи",
                "parameters": [
                    {
                        "description": "Данные для создания задачи",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/gateway.CreateTaskRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gateway.TaskResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gateway.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gateway.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Удаляет задачу по ее id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "task"
                ],
                "summary": "Удаление задачи",
                "parameters": [
                    {
                        "type": "string",
                        "example": "a81bc81b-dead-4e5d-abff-90865d1e13b1",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gateway.TaskResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gateway.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gateway.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/tasks": {
            "get": {
                "description": "Запрос получения всех задач",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "task"
                ],
                "summary": "Получение списка задач",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/gateway.TaskResponse"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gateway.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "gateway.CreateTaskRequest": {
            "type": "object",
            "required": [
                "deadline",
                "description",
                "title"
            ],
            "properties": {
                "deadline": {
                    "type": "string",
                    "example": "2025-07-01T12:00:00Z"
                },
                "description": {
                    "type": "string",
                    "example": "В ближайшем магазине"
                },
                "title": {
                    "type": "string",
                    "example": "Купить хлеб"
                }
            }
        },
        "gateway.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "some error"
                }
            }
        },
        "gateway.TaskResponse": {
            "type": "object",
            "properties": {
                "UpdatedAt": {
                    "type": "string",
                    "example": "2025-07-01T12:00:00Z"
                },
                "createdAt": {
                    "type": "string",
                    "example": "2025-07-01T12:00:00Z"
                },
                "deadline": {
                    "type": "string",
                    "example": "2025-07-01T12:00:00Z"
                },
                "description": {
                    "type": "string",
                    "example": "В ближайшем магазине"
                },
                "id": {
                    "type": "string",
                    "example": "a81bc81b-dead-4e5d-abff-90865d1e13b1"
                },
                "status": {
                    "type": "string",
                    "example": "TODO"
                },
                "title": {
                    "type": "string",
                    "example": "Купить хлеб"
                }
            }
        },
        "gateway.UpdateTaskRequestBody": {
            "type": "object",
            "required": [
                "status"
            ],
            "properties": {
                "status": {
                    "type": "string",
                    "example": "TODO"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:50052",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "Swagger Tasker",
	Description:      "Service for working with tasks",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
